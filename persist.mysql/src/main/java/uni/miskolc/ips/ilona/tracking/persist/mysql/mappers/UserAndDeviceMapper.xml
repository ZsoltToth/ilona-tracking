<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="uni.miskolc.ips.ilona.tracking.persist.mysql.mappers.UserAndDeviceMapper">

	<resultMap type="UserData" id="UserDataResult">
		<id column="userid" property="userid" />
		<result column="username" property="username" />
		<result column="email" property="email" />
		<result column="password" property="password" />
		<result column="enabled" property="enabled" typeHandler="BooleanToIntHander" />
		<result column="lastlogindate" property="lastLoginDate" />
		<result column="credentialsvaliduntil" property="credentialNonExpiredUntil" />
		<result column="nonlocked" property="nonLocked" typeHandler="BooleanToIntHander" />
		<result column="lockeduntil" property="lockedUntil" />
	</resultMap>

	<resultMap type="DeviceData" id="DeviceDataResult">
		<id column="deviceid" property="deviceid" />
		<result column="devicename" property="deviceName" />
		<result column="devicetype" property="deviceType" />
		<result column="devicetypename" property="deviceTypeName" />
	</resultMap>

	<!-- <resultMap type="java.util.HashMap" id="allRolesResult"> <id property="key" 
		column="userid"/> <collection property="value" ofType="string" javaType="list" 
		jdbcType="VARCHAR"> <id property="value" column="userrole"/> </collection> 
		</resultMap> -->

	<select id="getUserBaseData" parameterType="string" resultMap="UserDataResult">
		select
		tu.userid, tu.username, tu.email, tu.password, tu.enabled,
		tu.lastlogindate, tu.credentialsvaliduntil, tu.nonlocked,
		tu.lockeduntil
		from TrackingUsers tu where tu.userid = #{userid};
	</select>

	<select id="getAllUsersBaseData" resultMap="UserDataResult">
		select
		tu.userid,
		tu.username, tu.email, tu.password, tu.enabled,
		tu.lastlogindate,
		tu.credentialsvaliduntil, tu.nonlocked,
		tu.lockeduntil
		from
		TrackingUsers tu;
	</select>

	<select id="readLoginAttempts" resultType="Long" parameterType="string">
		SELECT round(unix_timestamp(attempt)*1000) FROM
		TrackingLoginAttempts where userid = #{userid};
	</select>

	<select id="getUserRoles" parameterType="string" resultType="String"
		statementType="PREPARED">
		select tur.userrole from TrackingUserRoles tur where
		userid = #{userid};
	</select>

	<select id="getUserDevices" resultMap="DeviceDataResult">
		select deviceid,
		devicename, devicetype, devicetypename from TrackingDevices where
		ownerid = #{user.userid};
	</select>

	<!-- <select id="getAllUsersRoles" resultMap="allRolesResult" > select tur.userid, 
		tur.userrole from TrackingUserRoles tur; </select> -->

	<insert id="createUserBaseData" parameterType="UserData"
		statementType="PREPARED">
		insert into
		TrackingUsers (userid, username, email,
		password, enabled,
		lastloginDate, credentialsvaliduntil, nonlocked,
		lockeduntil) values(
		#{userid },
		#{username},
		#{email},
		#{password},
		#{enabled,typeHandler=BooleanToIntHander},
		#{lastLoginDate},
		#{credentialNonExpiredUntil},
		#{nonLocked,
		typeHandler=BooleanToIntHander},
		#{lockedUntil}
		);
	</insert>

	<insert id="createUserRoles" parameterType="UserData">
		insert into TrackingUserRoles values
		<foreach collection="roles" item="role" separator=",">
			(#{userid},
			#{role})
		</foreach>
		;
	</insert>

	<insert id="storeLoginAttempts" parameterType="UserData">
		insert into TrackingLoginAttempts(userid,attempt) values
		<foreach collection="badLogins" item="badlogin" separator=",">
			(#{userid},
			#{badlogin})
		</foreach>
		;
	</insert>

	<insert id="storeLoginAttemptsWithMilliseconds">
		insert into TrackingLoginAttempts(userid, attempt) values
		<foreach collection="attempts" item="badlogin" separator=",">
			(#{userid},
			from_unixtime(#{badlogin}))
		</foreach>
		;
	</insert>

	<insert id="storeDevice">
		insert into TrackingDevices(ownerid, deviceid,
		devicename, devicetype, devicetypename) values(
		#{user.userid},
		#{device.deviceid}, #{device.deviceName}, #{device.deviceType},
		#{device.deviceTypeName}
		);
	</insert>


	<update id="updateUserBase" statementType="PREPARED">
		update TrackingUsers
		set
		username= #{username},
		email=
		#{email},
		password = #{password},
		enabled = #{enabled,
		typeHandler=BooleanToIntHander},
		lastlogindate =
		#{lastLoginDate},
		credentialsvaliduntil = #{credentialNonExpiredUntil},
		nonlocked =
		#{nonLocked, typeHandler=BooleanToIntHander},
		lockeduntil =
		#{lockedUntil}
		where userid = #{userid}
	</update>

	<update id="updateDevice">
		update TrackingDevices set devicename =
		#{device.deviceName}, devicetype = #{device.deviceType},
		devicetypename = #{device.deviceTypeName} where
		ownerid =
		#{user.userid} and deviceid = #{device.deviceid};
	</update>

	<delete id="deleteUser" parameterType="string" statementType="PREPARED">
		delete from TrackingUsers where userid = #{userid};
	</delete>

	<delete id="eraseUserRoles" parameterType="string">
		delete from
		TrackingUserRoles where userid = #{userid};
	</delete>

	<delete id="deleteLoginAttempts" statementType="PREPARED">
		delete from
		TrackingLoginAttempts where attempt &lt; #{beforeDate} and userid =
		#{userid};
	</delete>

	<delete id="deleteDevice">
		delete from TrackingDevices where deviceid =
		#{device.deviceid} and ownerid = #{user.userid}
	</delete>
</mapper>